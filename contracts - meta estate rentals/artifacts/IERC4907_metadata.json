{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "expires",
						"type": "uint64"
					}
				],
				"name": "UpdateUser",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint64",
						"name": "expires",
						"type": "uint64"
					}
				],
				"name": "setUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "userExpires",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "userOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"setUser(uint256,address,uint64)": {
					"details": "The zero address indicates there is no user Throws if `tokenId` is not valid NFT",
					"params": {
						"expires": "UNIX timestamp, The new user could use the NFT before expires",
						"user": "The new user of the NFT"
					}
				},
				"userExpires(uint256)": {
					"details": "The zero value indicates that there is no user",
					"params": {
						"tokenId": "The NFT to get the user expires for"
					},
					"returns": {
						"_0": "The user expires for this NFT"
					}
				},
				"userOf(uint256)": {
					"details": "The zero address indicates that there is no user or the user is expired",
					"params": {
						"tokenId": "The NFT to get the user address for"
					},
					"returns": {
						"_0": "The user address for this NFT"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"UpdateUser(uint256,address,uint64)": {
					"notice": "Emitted when the `user` of an NFT or the `expires` of the `user` is changed The zero address for user indicates that there is no user address"
				}
			},
			"kind": "user",
			"methods": {
				"setUser(uint256,address,uint64)": {
					"notice": "set the user and expires of an NFT"
				},
				"userExpires(uint256)": {
					"notice": "Get the user expires of an NFT"
				},
				"userOf(uint256)": {
					"notice": "Get the user address of an NFT"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"IERC4907.sol": "IERC4907"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"IERC4907.sol": {
			"keccak256": "0x21df22752254f53a73c32fdef203b7b4f7edcb9a86724b377daca8584c3e3f4a",
			"license": "MIT",
			"urls": [
				"bzz-raw://82cb569500fbfa8b7271b47c0621ac5ac4369ef3649006d9dc506fbea67d3771",
				"dweb:/ipfs/QmZbmBnd1jmEo1PY4iqvQvjGQQrX8QaLQomTSi6zREKwJb"
			]
		}
	},
	"version": 1
}